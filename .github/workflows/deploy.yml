name: Deploy
on:
  push:
    branches:
      - main
permissions:
  contents: read
  actions: write
  id-token: write
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VITE_BASE_URL: ${{ vars.VITE_BASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}
          VITE_SUPABASE_URL: ${{ vars.VITE_SUPABASE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: artifacts
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: artifacts
          path: ./dist
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::648183724555:role/salishsea-deploy-action
          aws-region: us-west-2
      - uses: supabase/setup-cli@v1
      - run: supabase link --project-ref ${{ vars.SUPABASE_PROJECT_ID }}
      - run: supabase db push
      - name: Deploy to S3 and invalidate CloudFront
        run: |
          aws s3 sync --no-progress dist "s3://${{ vars.S3_BUCKET }}/site"
          aws cloudfront create-invalidation --distribution-id "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" --paths /
